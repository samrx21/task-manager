@use "@/styles/_variables.scss" as *;

header {
  margin-inline: 3rem;
}

.container-title {
  display: flex;
  justify-content: center;
  align-items: center;
  margin-bottom: 1rem;
  margin-block: 1rem;
  padding: 1rem;
  background-color: $primary-light;
  border-radius: 8px;
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
}

.container-title h1 {
  font-family: "Roboto", sans-serif;
  font-size: 2rem;
  color: rgb(255, 255, 255);
  text-align: center;
  margin: 0;
}

.states-menu-header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 1rem;
}

.states-btn-toggle {
  background-color: $primary;
  color: white;
  border: none;
  border-radius: 4px;
  cursor: pointer;
  padding: 0.5rem 1rem;
  font-family: "Roboto", sans-serif;
  font-size: 1rem;

  &:hover {
    background-color: $primary-light;
  }
}

.states-menu-container {
  position: relative;
}

.states-menu {
  position: absolute;
  top: 100%;
  left: 1rem;
  background: white;
  border: 1px solid #ddd;
  border-radius: 4px;
  padding: 1rem;
  min-width: 200px;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
  z-index: 1000;
}

.trash-menu {
  position: absolute;
  top: 100%;
  right: 1rem;
  background: white;
  border: 1px solid #ddd;
  border-radius: 4px;
  padding: 1rem;
  margin-top: 0.5rem;
  min-width: 200px;
  max-width: 30rem;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
  z-index: 1000;
}

.trash-item {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 0.5rem;
  border-bottom: 1px solid rgb(206, 201, 201);
  word-wrap: break-word;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  
}

.trash-item span {
  max-width: 80%;
  white-space: normal;
  word-wrap: break-word;
}

.trash-btn {
  background: none;
  border: none;
  cursor: pointer;
  padding: 0.25rem;

  &:hover {
    opacity: 0.7;
  }
}

.empty-trash-btn {
  background: none;
  color: #dc3545;
  border: none;
  border-radius: 4px;
  cursor: pointer;
  padding: 0;
  font-family: "Roboto", sans-serif;
  font-size: 1rem;
  padding: 0.1rem 0.3rem;

  &:hover {
    background-color: #dc3545;
    color: white;
  }
}

.trash-header {
  display: flex;
  justify-content: space-between;
  align-items: center;

  h3 {
    margin: 0;
    font-size: 1rem;
    font-weight: 600;
    color: #212529;
  }
}

.empty-trash{
  margin-top: 1rem;
}

.states-list {
  margin-bottom: 1rem;

  h3 {
    margin: 0;
    font-size: 1rem;
    font-weight: 600;
    color: #212529;
  }
}

.state-item {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 0.5rem;
  border-bottom: 1px solid #eee;

  &:last-child {
    border-bottom: none;
  }
}

.trash-actions {
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 0.5rem;
}

.restore-btn{
  background: none;
  border: none;
  cursor: pointer;
  padding: 0.25rem;
  display: flex;
  align-items: center;
  justify-content: center;

  &:hover {
    opacity: 0.7;
  }
}
.delete-btn {
  background: none;
  border: none;
  cursor: pointer;
  padding: 0.25rem;
  

  &:hover {
    opacity: 0.7;
  }
}

.add-state-form {
  display: flex;
  gap: 0.5rem;

  input {
    flex: 1;
    padding: 0.5rem;
    border: 1px solid #ddd;
    border-radius: 4px;
  }

  button {
    padding: 0.5rem 1rem;
    background: $primary;
    color: white;
    border: none;
    border-radius: 4px;
    cursor: pointer;

    &:disabled {
      opacity: 0.5;
      cursor: not-allowed;
    }

    &:hover:not(:disabled) {
      background: $primary-light;
    }
  }
}

.container-toggle-trash {
  display: flex;
  justify-content: space-between;
  align-items: center;
}

.alerts-container {
  position: fixed;
  top: 20px;
  right: 20px;
  z-index: 1000;
}

.alert {
  padding: 1rem;
  margin-bottom: 0.5rem;
  border-radius: 4px;
  min-width: 200px;
  animation: slideIn 0.3s ease-out;
}

.alert-success {
  background-color: #d4edda;
  color: #155724;
  border: 1px solid #c3e6cb;
}

.alert-error {
  background-color: #f8d7da;
  color: #721c24;
  border: 1px solid #f5c6cb;
}

.alert-warning {
  background-color: #fff3cd;
  color: #856404;
  border: 1px solid #ffeeba;
}

//switch view
/* From Uiverse.io by cbolson */
.switch {
  --_switch-padding: 4px; /* padding around button*/
  --_slider-bg-clr: rgba(12, 74, 110, 0.65); /* slider color unchecked */
  --_slider-bg-clr-on: rgba(12, 74, 110, 1); /* slider color checked */
  --_slider-txt-clr: #ffffff;
  --_label-padding: 0.6rem 1rem; /* padding around the labels -  this gives the switch it's global width and height */
  --_switch-easing: cubic-bezier(
    0.47,
    1.64,
    0.41,
    0.8
  ); /* easing on toggle switch */
  color: white;
  width: fit-content;
  display: flex;
  justify-content: center;
  position: relative;
  border-radius: 9999px;
  cursor: pointer;
  display: grid;
  grid-template-columns: repeat(2, minmax(0, 1fr));
  position: relative;
  isolation: isolate;
}

.switch input[type="checkbox"] {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border-width: 0;
}
.switch > span {
  display: grid;
  place-content: center;
  transition: opacity 300ms ease-in-out 150ms;
  padding: var(--_label-padding);
}
.switch::before,
.switch::after {
  content: "";
  position: absolute;
  border-radius: inherit;
  transition: inset 150ms ease-in-out;
}
/* switch slider */
.switch::before {
  background-color: $primary-light;
  inset: var(--_switch-padding) 50% var(--_switch-padding)
    var(--_switch-padding);
  transition: inset 500ms var(--_switch-easing),
    background-color 500ms ease-in-out;
  z-index: -1;
  box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.3), 0 1px rgba(255, 255, 255, 0.3);
}
/* switch bg color */
.switch::after {
  background-color: $primary;
  inset: 0;
  z-index: -2;
}
/* switch hover & focus */
.switch:focus-within::after {
  inset: -0.25rem;
}
.switch:has(input:checked):hover > span:first-of-type,
.switch:has(input:not(:checked)):hover > span:last-of-type {
  opacity: 1;
  transition-delay: 0ms;
  transition-duration: 100ms;
}
/* switch hover */
.switch:has(input:checked):hover::before {
  inset: var(--_switch-padding) var(--_switch-padding) var(--_switch-padding)
    45%;
}
.switch:has(input:not(:checked)):hover::before {
  inset: var(--_switch-padding) 45% var(--_switch-padding)
    var(--_switch-padding);
}
/* checked - move slider to right */
.switch:has(input:checked)::before {
  background-color: $primary-light;
  inset: var(--_switch-padding) var(--_switch-padding) var(--_switch-padding)
    50%;
}
/* checked - set opacity */
.switch > span:last-of-type,
.switch > input:checked + span:first-of-type {
  opacity: 0.75;
}
.switch > input:checked ~ span:last-of-type {
  opacity: 1;
}

@keyframes slideIn {
  from {
    transform: translateX(100%);
    opacity: 0;
  }
  to {
    transform: translateX(0);
    opacity: 1;
  }
}

@media (max-width: 768px) {
  header {
    margin-inline: 1rem;
  }

  .container-title {
    flex-direction: column;
    gap: 1rem;
  }

  .states-menu {
    left: 0;
    right: 0;
  }
}
